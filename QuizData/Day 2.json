{
  "questions": [
    {
      "question": "What can you view within the Frontastic sandbox?",
      "options": [
        "Frontend designs only",
        "Server logs and database",
        "Only the source code",
        "Only the production system configuration"
      ],
      "answer": "Server logs and database"
    },
    {
      "question": "How can you access the Frontastic sandbox?",
      "options": [
        "ssh user@<your-machine-host>",
        "ssh root@<your-machine-host>",
        "ssh vagrant@<your-machine-host>",
        "ssh admin@<your-machine-host>"
      ],
      "answer": "ssh vagrant@<your-machine-host>"
    },
    {
      "question": "Where can you find logs related to PHP problems?",
      "options": [
        "/var/www/logs/php.log",
        "/var/logs/php_errors.log",
        "/var/log/php.log",
        "/var/log/php/errors.log"
      ],
      "answer": "/var/log/php.log"
    },
    {
      "question": "Which tool does Frontastic use to manage long-running background processes?",
      "options": [
        "Cronjob",
        "Task Scheduler",
        "Supervisord",
        "Task Manager"
      ],
      "answer": "Supervisord"
    },
    {
      "question": "What is the password to access MySQL in the Frontastic sandbox?",
      "options": [
        "admin",
        "frontastic",
        "root",
        "vagrant"
      ],
      "answer": "root"
    },
    {
      "question": "What should you avoid doing in the Frontastic sandbox?",
      "options": [
        "Viewing the logs",
        "Editing system configuration files",
        "Accessing the MySQL interactive shell",
        "Checking the status of tasks"
      ],
      "answer": "Editing system configuration files"
    },
    {
      "question": "If you make a change to the database content, what is one way to revert those changes?",
      "options": [
        "Run bin/console frontastic:reset",
        "Run bin/console frontastic:clear",
        "Wait for the system to auto-revert",
        "Email the Frontastic support team"
      ],
      "answer": "Run bin/console frontastic:clear"
    },
    {
      "question": "Which directory contains all the JavaScript code?",
      "options": [
        "src/php/",
        "src/js/",
        "src/scss/",
        "src/layout/"
      ],
      "answer": "src/js/"
    },
    {
      "question": "Where are static assets required by SCSS or JS stored?",
      "options": [
        "src/php/",
        "src/js/",
        "src/scss/",
        "src/layout/"
      ],
      "answer": "src/layout/"
    },
    {
      "question": "What is the purpose of the 'paas' folder?",
      "options": [
        "For storing customer-specific data",
        "For storing project assets",
        "For holding the Frontastic platform code",
        "For storing shared code between projects"
      ],
      "answer": "For holding the Frontastic platform code"
    },
    {
      "question": "In which directory should all your project code reside?",
      "options": [
        "<customer>",
        "paas",
        "<customer>_<project>",
        "src/js/"
      ],
      "answer": "<customer>_<project>"
    },
    {
      "question": "In the 'composer.json' file for the 'awesomecustomer' folder, what does the 'autoload' section define?",
      "options": [
        "Dependencies for the project",
        "The PHP version",
        "Path to JavaScript files",
        "The directory for PHP files"
      ],
      "answer": "The directory for PHP files"
    },
    {
      "question": "Which folder contains the 'build.xml', 'composer.json', and 'package.json' files?",
      "options": [
        "<customer>_<project>",
        "<customer>",
        "paas",
        "src/js/"
      ],
      "answer": "<customer>"
    },
    {
      "question": "If you want to share code between multiple Frontastic projects, where should you place that shared code?",
      "options": [
        "In the <customer> folder",
        "In each <customer>_<project> folder",
        "In the paas folder",
        "In the src/js/ folder"
      ],
      "answer": "In the <customer> folder"
    },
    {
      "title": "Running Tests in Frontastic Sandbox",
      "question": "How can you run all tests of all your projects within a Frontastic sandbox?",
      "options": [
        "Run the command 'npm test'.",
        "SSH into the sandbox and run 'ant test'.",
        "Open the Frontastic Studio and click 'Run Tests'.",
        "Use the Frontastic API and send a POST request to '/test'."
      ],
      "answer": "SSH into the sandbox and run 'ant test'."
    },
    {
      "title": "Project Configuration File Location",
      "question": "Where is the primary configuration file for Frontastic projects located?",
      "options": [
        "config/project.json",
        "settings/project.yml",
        "config/project.yml",
        "backend/config.yml"
      ],
      "answer": "config/project.yml"
    },
    {
      "title": "Overwriting Base Configuration",
      "question": "If you want to overwrite the base configuration for the staging environment, which file should you create?",
      "options": [
        "project.yml.stage",
        "project.yml.staging",
        "config/project.yml.stage",
        "config/project.yml.staging"
      ],
      "answer": "config/project.yml.staging"
    },
    {
      "title": "Encrypting Production Access Tokens",
      "question": "Why is it recommended to encrypt production access tokens and configurations?",
      "options": [
        "To improve the performance of API calls.",
        "To make them publicly available for everyone on the project.",
        "Because they are too long and need to be shortened.",
        "To ensure they aren't publicly available to everyone on the project."
      ],
      "answer": "To ensure they aren't publicly available to everyone on the project."
    },
    {
      "title": "WebPack Port",
      "question": "Which statement is true regarding the 'webpackPort' in the 'project.yml'?",
      "options": [
        "You can change it anytime you want.",
        "It defines the database port.",
        "It should never be changed once defined.",
        "It's used to change the Frontastic Studio port."
      ],
      "answer": "It should never be changed once defined."
    },
    {
      "title": "Frontastic API Hub Configuration",
      "question": "In the 'project.yml', where do you configure how the Frontastic API hub accesses your API providers?",
      "options": [
        "Under the 'configuration' key.",
        "Under the 'apiKey' key.",
        "At the top level of the file.",
        "Under the 'endpoints' key."
      ],
      "answer": "Under the 'configuration' key."
    },
    {
      "title": "Accessing Project Configuration in Frontend",
      "question": "How can you access the project's configuration in the frontend?",
      "options": [
        "By using 'connect.config'.",
        "By directly reading the 'project.yml' file.",
        "By using 'connect.context' as a part of tastify.",
        "By sending a GET request to '/config'."
      ],
      "answer": "By using 'connect.context' as a part of tastify."
    },
    {
      "title": "Context Service in Server-side",
      "question": "Which method of the 'contextService' is deprecated and shouldn't be used outside of console scripts?",
      "options": [
        "$contextService->createContextFromRequest()",
        "$contextService->getContext()",
        "$contextService->getRequest()",
        "$contextService->getProject()"
      ],
      "answer": "$contextService->getContext()"
    },
    {
      "title": "Changing Project Settings in Studio",
      "question": "Which of the following can you change in the Frontastic Studio?",
      "options": [
        "The project's source code.",
        "Server logs and database.",
        "SEO, basic authentication, and default settings.",
        "The 'project.yml' directly."
      ],
      "answer": "SEO, basic authentication, and default settings."
    },
    {
      "title": "Frontastic Title Component",
      "question": "Which React library is used in the Title component to manage the document head?",
      "options": [
        "React-Document",
        "React-Title",
        "React-Helmet",
        "React-Header"
      ],
      "answer": "React-Helmet"
    },
     {
      "title": "Accessing Project Configuration in Frontend",
      "question": "How can you access information about your project in the frontend?",
      "options": [
        "Using global variables",
        "Directly reading the 'project.yml' file",
        "Using the 'context' object",
        "Fetching it from an external API"
      ],
      "answer": "Using the 'context' object"
    },
    {
      "title": "Tastify Utility in Frontend",
      "question": "Which utility in Frontastic allows you to access the project's configuration in the frontend?",
      "options": [
        "tastify.config",
        "tastify.props",
        "tastify.context",
        "tastify.data"
      ],
      "answer": "tastify.context"
    },
    {
      "title": "Fetching Secrets from project.yml in Frontend",
      "question": "Can you fetch secrets from the 'project.yml' in the frontend?",
      "options": [
        "Yes, all secrets are available.",
        "No, secrets are not accessible.",
        "Only if they are encrypted.",
        "Only during development mode."
      ],
      "answer": "No, secrets are not accessible."
    },
    {
      "title": "Accessing Project Configuration in React Component",
      "question": "In the provided React 'Title' component, how is the project configuration accessed?",
      "options": [
        "Using 'this.state.config'",
        "Using 'this.props.context'",
        "Directly from the 'ConfigurationSchema'",
        "Fetching from an API endpoint"
      ],
      "answer": "Using 'this.props.context'"
    }
  ]
}
